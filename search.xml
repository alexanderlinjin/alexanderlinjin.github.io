<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用hexo做好博客后上传到github]]></title>
      <url>/2017/06/02/hexo%E4%B8%8A%E4%BC%A0%E5%88%B0github/</url>
      <content type="html"><![CDATA[<h3 id="以下均为本人总结"><a href="#以下均为本人总结" class="headerlink" title="以下均为本人总结"></a>以下均为本人总结</h3><p>操作系统：ubuntu16.04，hexo版本 “hexo”: {“version”: “3.3.7”},操作时间：2017.6.12。<br>本文全由Alin J在百度搜索了很多教程中总结出来的，如有雷同觉得是抄袭的可联系我，邮箱：dgangmagag@163.com。<br>node.js安装好了，git，hexo，npm也安装好了，下一步就是把源码上传到github上，并实现输入域名即可浏览自己的博客。</p>
<h2 id="第一步：创建github账号和创建仓库"><a href="#第一步：创建github账号和创建仓库" class="headerlink" title="第一步：创建github账号和创建仓库"></a>第一步：创建github账号和创建仓库</h2><h3 id="1，百度github，进入官网注册"><a href="#1，百度github，进入官网注册" class="headerlink" title="1，百度github，进入官网注册"></a>1，百度github，进入官网注册</h3><p>简单的操作</p>
<h3 id="1-2，创建仓库"><a href="#1-2，创建仓库" class="headerlink" title="1.2，创建仓库"></a>1.2，创建仓库</h3><p>点击Repositories，点击new，跳转到Create a new repository页面。<br>在Repository name输入你的仓库名，格式是XXX.github.io,由于第一次操作，我建议<br>XXX输入你的用户名。</p>
<h2 id="第二步：生成ssh-key-为github配置ssh-key"><a href="#第二步：生成ssh-key-为github配置ssh-key" class="headerlink" title="第二步：生成ssh key,为github配置ssh key"></a>第二步：生成ssh key,为github配置ssh key</h2><h3 id="2-1，生成key"><a href="#2-1，生成key" class="headerlink" title="2.1，生成key"></a>2.1，生成key</h3><p>配置git用户名和邮箱<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config user.name <span class="string">"用户名"</span></div><div class="line">git config user.email <span class="string">"邮箱"</span></div></pre></td></tr></table></figure></p>
<p>顾名思义用户名就是你的github用户名，邮箱就是你的github邮箱</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"youname@example.com"</span></div></pre></td></tr></table></figure>
<p>youname@example.com这里写自己的gihub邮箱名，生成后输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/.ssh/</div><div class="line">ls</div></pre></td></tr></table></figure></p>
<p>可以看到<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">id_rsa	id_rsa.pub  known_hosts</div></pre></td></tr></table></figure></p>
<p>三个文件，我们输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim id_rsa.pub</div></pre></td></tr></table></figure></p>
<p>查看，把里面的东西全部复制，先粘贴到文档上,复制粘贴好按esc，输入:wq退出vim</p>
<h3 id="2-2，为github配置SSH-key"><a href="#2-2，为github配置SSH-key" class="headerlink" title="2.2，为github配置SSH key"></a>2.2，为github配置SSH key</h3><p>登录到你的github，点击右上头像那里，在下拉菜单找到setting，在左边侧边栏找到SSH and GPG keys,点击绿色按钮new SSH key，title随便输入一个名称，key粘贴刚刚复制出来的ssh key。OK下一步。</p>
<h2 id="第三步，配置-congig-yml"><a href="#第三步，配置-congig-yml" class="headerlink" title="第三步，配置_congig.yml"></a>第三步，配置_congig.yml</h2><p>这个文件在hexo安装的根目录下(我的是blog,如果你是看了我上篇文章的话，那就跟我的一样)，拉到最下面，修改成（其中XXX就是你的用户名）<br>deploy:<br>  type: git<br>  repo:<br>    github: <a href="https://github.com/XXX/XXX.github.io.git" target="_blank" rel="external">https://github.com/XXX/XXX.github.io.git</a><br>    branch: master</p>
<h2 id="第四步，建立本地仓库"><a href="#第四步，建立本地仓库" class="headerlink" title="第四步，建立本地仓库"></a>第四步，建立本地仓库</h2><p>1，在做本地仓库的文件夹内(如本人安装hexo创建了一个叫blog的文件夹，我输入cd blog然后在这个文件夹内执行的git init)，执行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init</div></pre></td></tr></table></figure></p>
<p>2，完成后输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -a</div></pre></td></tr></table></figure></p>
<p>可以看到多了一个.git的文件（.git里面的任何东西不要动）<br>3，然后指定文件加到本地仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add .</div></pre></td></tr></table></figure></p>
<p>这条命令时讲本地仓库的所有东西都添加到本地仓库，你可以指定某一文件，如你有一个名叫test的文件，输入git add test就提交test这个文件。另外，你可以执行以下命令查看刚刚提交了什么<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git status</div></pre></td></tr></table></figure></p>
<p>4，然后输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -m <span class="string">"XXX"</span></div></pre></td></tr></table></figure></p>
<p>XXX是提交说明，随便输入，例如：this is a test.</p>
<p>5,建立链接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin git@github.com:XXX/XXX.github.io.git</div></pre></td></tr></table></figure></p>
<p>6,确认提交<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push -u origin master</div></pre></td></tr></table></figure></p>
<p>提交速度看带宽，我的上传速度基本在1K到5K。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">对象计数中: 310, 完成.</div><div class="line">Delta compression using up to 4 threads.</div><div class="line">压缩对象中: 100% (297/297), 完成.</div><div class="line">写入对象中: 100% (310/310), 4.41 MiB | 1024 bytes/s, 完成.</div><div class="line">Total 310 (delta 10), reused 0 (delta 0)</div></pre></td></tr></table></figure></p>
<p>然后光标一直不动了，吃完夜宵，大概半个小时，就显示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">To git@github.com:diao7ni/diao7ni.github.io.git</div><div class="line"> * [new branch]      master -&gt; master</div><div class="line">分支 master 设置为跟踪来自 origin 的远程分支 master。</div></pre></td></tr></table></figure></p>
<p>提交完成</p>
<p>7,最后一步：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>在执行hexo d时可能会报错，在文章下面有解决方法<br>在浏览器输入XXX.github.io即可浏览到刚刚上传的博客啦</p>
<h3 id="关于配置域名"><a href="#关于配置域名" class="headerlink" title="关于配置域名"></a>关于配置域名</h3><p>关于域名配置我就不说啦，网上很多可以用的教程。你们可以查看这个网址：<a href="http://qbview.url.cn/getResourceInfo?appid=31&amp;url=http%3A%2F%2Fwww.cnblogs.com%2Fpenglei-it%2Fp%2Fhexo_domain_name.html%3Fnsukey%3D%252Bhz9cHBlFgcV2SrfgwSIsTo%252FxDss6U2neFhtGwcRsbBElQs4%252B903yHmv3d%252FVOnyi%252FhKcvpBT3Tr%252BrTzYZ32eeV5Fd2MxmDFVUDAc0AHDlITeLALs2B3Ed1ust4%252FRrwAK6s1ncs%252BVXt42nEFjWaQh79nL%252BNAJGHNcJCAvbIEY23CPoqoxBmdD9YiciX2DOlTV&amp;version=10000&amp;doview=1&amp;ua=Mozilla%2F5.0+(X11%3B+Ubuntu%3B+Linux+x86_64%3B+rv%3A53.0)+Gecko%2F20100101+Firefox%2F53.0&amp;keeplink=0&amp;reformat=0" target="_blank" rel="external">http://qbview.url.cn/getResourceInfo?appid=31&amp;url=http%3A%2F%2Fwww.cnblogs.com%2Fpenglei-it%2Fp%2Fhexo_domain_name.html%3Fnsukey%3D%252Bhz9cHBlFgcV2SrfgwSIsTo%252FxDss6U2neFhtGwcRsbBElQs4%252B903yHmv3d%252FVOnyi%252FhKcvpBT3Tr%252BrTzYZ32eeV5Fd2MxmDFVUDAc0AHDlITeLALs2B3Ed1ust4%252FRrwAK6s1ncs%252BVXt42nEFjWaQh79nL%252BNAJGHNcJCAvbIEY23CPoqoxBmdD9YiciX2DOlTV&amp;version=10000&amp;doview=1&amp;ua=Mozilla%2F5.0+(X11%3B+Ubuntu%3B+Linux+x86_64%3B+rv%3A53.0)+Gecko%2F20100101+Firefox%2F53.0&amp;keeplink=0&amp;reformat=0</a></p>
<h2 id="过程中可能出现的报错"><a href="#过程中可能出现的报错" class="headerlink" title="过程中可能出现的报错"></a>过程中可能出现的报错</h2><h3 id="问题1：输入hexo-d之后可能会出现这种问题，不知道你们会不会，反正我就是"><a href="#问题1：输入hexo-d之后可能会出现这种问题，不知道你们会不会，反正我就是" class="headerlink" title="问题1：输入hexo d之后可能会出现这种问题，不知道你们会不会，反正我就是"></a>问题1：输入hexo d之后可能会出现这种问题，不知道你们会不会，反正我就是</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">fatal: <span class="string">'master'</span> does not appear to be a git repository</div><div class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</div><div class="line"></div><div class="line">Please make sure you have the correct access rights</div><div class="line">and the repository exists.</div><div class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></div><div class="line">Error: fatal: 'master<span class="string">' does not appear to be a git repository</span></div><div class="line">fatal: Could not read from remote repository.</div><div class="line"></div><div class="line">Please make sure you have the correct access rights</div><div class="line">and the repository exists.</div><div class="line"></div><div class="line">    at ChildProcess.&lt;anonymous&gt; (/home/lin/blog/node_modules/hexo-util/lib/spawn.js:37:17)</div><div class="line">    at emitTwo (events.js:106:13)</div><div class="line">    at ChildProcess.emit (events.js:191:7)</div><div class="line">    at maybeClose (internal/child_process.js:891:16)</div><div class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)</div></pre></td></tr></table></figure>
<p>因为被百度某些坑人博客欺骗，我在输入域名的时候没有输对格式，显示404错误，并且终端报出这条错误，以为是这条报错导致的404。为了解决这个问题我找了一个晚上也没有解决，在一个朋友无意中发了一个域名出来我才发现原来我一直在浏览器打错域名，正确域名格式时XXX.github.io，在打对域名后发现可以浏览自己的博客了，即使终端时报出这条错误。也就是说，这条报错可以无视，因为对我暂时没有影响。。。报错具体原因不详。</p>
<h3 id="问题2，ssh-key-没有配好"><a href="#问题2，ssh-key-没有配好" class="headerlink" title="问题2，ssh key 没有配好"></a>问题2，ssh key 没有配好</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Warning: Permanently added the RSA host key <span class="keyword">for</span> IP address <span class="string">'192.30.253.113'</span> to the list of known hosts. Permission denied (publickey). fatal: Could not <span class="built_in">read</span> from remote repository. Please make sure y</div></pre></td></tr></table></figure>
<p>解决办法：重新配一个呗</p>
<h3 id="问题3，git-fatal-远程-origin-已经存在。"><a href="#问题3，git-fatal-远程-origin-已经存在。" class="headerlink" title="问题3，git fatal: 远程 origin 已经存在。"></a>问题3，git fatal: 远程 origin 已经存在。</h3><p>这种情况一般是在百度教程复制粘贴别人的命令的时候没有修改然后手快按了enter才会发生。解决方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git remote rm origin</div><div class="line"></div><div class="line">git remote add origin git@github.com:XXX/XXX.github.io.git</div></pre></td></tr></table></figure></p>
<h3 id="问题4，ERROR-Deployer-not-found-git"><a href="#问题4，ERROR-Deployer-not-found-git" class="headerlink" title="问题4，ERROR Deployer not found: git"></a>问题4，ERROR Deployer not found: git</h3><p>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>有些百度出来的教程是教你输入npm install hexo-deployer-git -save（只想对这些抄都抄少一个行杠的人表示呵呵，执行之后报错，加多一个-后执行成功）</p>
<h3 id="问题5，执行hexo-d之后要输入Username-for-‘https-github-com‘"><a href="#问题5，执行hexo-d之后要输入Username-for-‘https-github-com‘" class="headerlink" title="问题5，执行hexo d之后要输入Username for ‘https://github.com‘:"></a>问题5，执行hexo d之后要输入Username for ‘<a href="https://github.com" target="_blank" rel="external">https://github.com</a>‘:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Username <span class="keyword">for</span> <span class="string">'https://github.com'</span>: </div><div class="line">Password <span class="keyword">for</span> <span class="string">'https://diao7ni@github.com'</span>:</div></pre></td></tr></table></figure>
<p>解决办法：输入你的git用户名和登录密码就好了</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo的安装和使用]]></title>
      <url>/2017/06/01/hexo-install&amp;use/</url>
      <content type="html"><![CDATA[<h3 id="以下均为本人总结"><a href="#以下均为本人总结" class="headerlink" title="以下均为本人总结"></a>以下均为本人总结</h3><p>操作系统：ubuntu16.04,操作时间2017.6.11。hexo是一款基于Node.js的静态博客框架，下面就详细讲解在ubuntu16.04下如何安装和使用hexo。</p>
<h2 id="第一步：安装node-js和Git"><a href="#第一步：安装node-js和Git" class="headerlink" title="第一步：安装node.js和Git"></a>第一步：安装node.js和Git</h2><h3 id="1，安装node-js"><a href="#1，安装node-js" class="headerlink" title="1，安装node.js"></a>1，安装node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install -y nodejs</div></pre></td></tr></table></figure>
<p>这是node.js比较推荐的安装方法，一步到位。如果通过apt-get install nodejs使用ubuntu官方库的node.js，安装后还要执行更新命令，因为ubuntu官方库的版本过旧，不太推荐。</p>
<h3 id="1-2，安装Git"><a href="#1-2，安装Git" class="headerlink" title="1.2，安装Git"></a>1.2，安装Git</h3><p>可以先查看你的电脑是否安装了Git，终端输入git，如果显示</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">The program <span class="string">'git'</span> is currently not installed. You can install it by typing:</div></pre></td></tr></table></figure>
<p>则说明没有安装Git，可以直接执行以下命令来安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure>
<h2 id="第二步：hexo的安装和使用"><a href="#第二步：hexo的安装和使用" class="headerlink" title="第二步：hexo的安装和使用"></a>第二步：hexo的安装和使用</h2><h3 id="2-1，hexo安装"><a href="#2-1，hexo安装" class="headerlink" title="2.1，hexo安装"></a>2.1，hexo安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install hexo-cli -g</div></pre></td></tr></table></figure>
<h3 id="2-2，快速创建一个博客"><a href="#2-2，快速创建一个博客" class="headerlink" title="2.2，快速创建一个博客"></a>2.2，快速创建一个博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init blog</div></pre></td></tr></table></figure>
<p>命令行中的blog为文件夹名（可自定义），执行该命令后会在/home/用户/下创建一个叫blog的文件夹。</p>
<h3 id="2-3，打开blog文件夹"><a href="#2-3，打开blog文件夹" class="headerlink" title="2.3，打开blog文件夹"></a>2.3，打开blog文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> blog</div></pre></td></tr></table></figure>
<h3 id="2-4，安装npm"><a href="#2-4，安装npm" class="headerlink" title="2.4，安装npm"></a>2.4，安装npm</h3><p>该命令是本地安装，如果想全局安装则执行$ sudo npm install -g</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install</div></pre></td></tr></table></figure>
<h3 id="2-5，生成静态页面"><a href="#2-5，生成静态页面" class="headerlink" title="2.5，生成静态页面"></a>2.5，生成静态页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure>
<p>hexo generate也可以</p>
<h3 id="2-6，启动hexo服务"><a href="#2-6，启动hexo服务" class="headerlink" title="2.6，启动hexo服务"></a>2.6，启动hexo服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>启动成功后直接在浏览器输入localhost:4000可看到hexo默认博客。</p>
<h2 id="以上就是hexo的安装和初步使用了，关于想更换hexo主题，创建新文章，添加评论功能等，在日后的博文中会有教程。"><a href="#以上就是hexo的安装和初步使用了，关于想更换hexo主题，创建新文章，添加评论功能等，在日后的博文中会有教程。" class="headerlink" title="以上就是hexo的安装和初步使用了，关于想更换hexo主题，创建新文章，添加评论功能等，在日后的博文中会有教程。"></a>以上就是hexo的安装和初步使用了，关于想更换hexo主题，创建新文章，添加评论功能等，在日后的博文中会有教程。</h2>]]></content>
      
        
    </entry>
    
  
  
</search>
