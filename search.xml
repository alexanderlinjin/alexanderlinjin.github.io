<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[实用的10条代码之css]]></title>
    <url>%2F2017%2F06%2F03%2Fcss%E4%BB%A3%E7%A0%8110%E6%9D%A1%2F</url>
    <content type="text"><![CDATA[网上找到的10条css代码 1. CSS Resets 网络上关于CSS重置的代码非常多。本段代码是根据Eric Meyer’s reset codes进行改编的，里面包含一点响应式图片和所有核心元素的边界框设置，这样就可以保持页边距和填充可以很好地对齐。1234567891011121314151617181920212223242526html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video &#123; margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; outline: none; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;&#125;html &#123; height: 101%; &#125;body &#123; font-size: 62.5%; line-height: 1; font-family: Arial, Tahoma, sans-serif; &#125; article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section &#123; display: block; &#125;ol, ul &#123; list-style: none; &#125; blockquote, q &#123; quotes: none; &#125;blockquote:before, blockquote:after, q:before, q:after &#123; content: ''; content: none; &#125;strong &#123; font-weight: bold; &#125; table &#123; border-collapse: collapse; border-spacing: 0; &#125;img &#123; border: 0; max-width: 100%; &#125; p &#123; font-size: 1.2em; line-height: 1.0em; color: #333; &#125; ## 2.经典的CSS Clearfix 这个clearfix代码已在Web开发者之间广泛流传，这段类选择器要应用到持有浮动元素的容器中，确保后面的内容都不会浮动，但会被下推和清除。12345.clearfix:after &#123; content: "."; display: block; clear: both; visibility: hidden; line-height: 0; height: 0; &#125;.clearfix &#123; display: inline-block; &#125; &lt;font&gt;&lt;/font&gt; html[xmlns] .clearfix &#123; display: block; &#125;* html .clearfix &#123; height: 1%; &#125; ## 3.升级版的Clearfix 在表现上，新版本和经典版本不存在什么差异，这些类可以有效地清除所有floats，但它们只兼容现代浏览器和传统的IE 6-8。1234.clearfix:before, .container:after &#123; content: ""; display: table; &#125;&lt;font&gt;&lt;/font&gt; .clearfix:after &#123; clear: both; &#125;/* IE 6/7 */.clearfix &#123; zoom: 1; &#125; ## 4. Cross-Browser Transparency CSS3里的许多属性都与浏览器相兼容，但也有特例，比如opacity，需要对它进行一些更新才可以。附加过滤属性可以兼容任何老版的IE浏览器。123456.transparent &#123; filter: alpha(opacity=50); /* internet explorer */ -khtml-opacity: 0.5; /* khtml, old safari */ -moz-opacity: 0.5; /* mozilla, netscape */ opacity: 0.5; /* fx, safari, opera */&#125; 源码地址： http://perishablepress.com/cross-browser-transparency-via-css/ ## 5. CSS Blockquote模板 这段代码主要用在页面上进行分离引用或复制内容，并且给页面文字提供了默认样式。123456789101112131415161718blockquote &#123; background: #f9f9f9;&lt; border-left: 10px solid #ccc; margin: 1.5em 10px; padding: .5em 10px; quotes: "\201C""\201D""\2018""\2019";&#125;blockquote:before &#123; color: #ccc; content: open-quote; font-size: 4em; line-height: .1em; margin-right: .25em; vertical-align: -.4em;&#125; blockquote p &#123; display: inline;&#125; 查看源码： http://css-tricks.com/snippets/css/simple-and-nice-blockquote-styling/ ## 6. 个性化的圆角代码 许多CSS开发者都非常熟悉圆角语法，但如何为每个角设置不同的值？不如看看下面这段代码吧！1234567891011121314151617#container &#123; -webkit-border-radius: 4px 3px 6px 10px; -moz-border-radius: 4px 3px 6px 10px; -o-border-radius: 4px 3px 6px 10px; border-radius: 4px 3px 6px 10px;&#125;/* alternative syntax broken into each line */#container &#123; -webkit-border-top-left-radius: 4px; -webkit-border-top-rightright-radius: 3px; -webkit-border-bottom-rightright-radius: 6px; -webkit-border-bottom-left-radius: 10px; -moz-border-radius-topleft: 4px; -moz-border-radius-topright: 3px; -moz-border-radius-bottomright: 6px; -moz-border-radius-bottomleft: 10px;&#125; ## 7. 一般媒体查询 这是一段非常好的模板，用于各种零零碎碎的媒体查询，在移动设备上也可以使用，这段代码甚至可以通过使用min-device-pixel-ratio引用到视网膜设备上。123456789101112131415161718192021222324252627282930313233343536373839 /* Smartphones (portrait and landscape) ----------- */@media only screen and (min-device-width : 320px) and (max-device-width : 480px) &#123; /* Styles */&#125; /* Smartphones (landscape) ----------- */@media only screen and (min-width : 321px) &#123; /* Styles */&#125; /* Smartphones (portrait) ----------- */@media only screen and (max-width : 320px) &#123; /* Styles */ &#125; /* iPads (portrait and landscape) ----------- */@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) &#123; /* Styles */ &#125; &lt;font&gt;&lt;/font&gt; /* iPads (landscape) ----------- */@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) &#123; /* Styles */&#125; /* iPads (portrait) ----------- */@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) &#123; /* Styles */&#125; /* Desktops and laptops ----------- */@media only screen and (min-width : 1224px) &#123; /* Styles */&#125;/* Large screens ----------- */@media only screen and (min-width : 1824px) &#123; /* Styles */&#125; /* iPhone 4 ----------- */@media only screen and (-webkit-min-device-pixel-ratio:1.5), only screen and (min-device-pixel-ratio:1.5) &#123; /* Styles */&#125; 源码地址： http://css-tricks.com/snippets/css/media-queries-for-standard-devices/ ## 8. 现代字体栈 在新网页上设计属于自己的字体栈还是件比较困难的事情，希望下面这段代码能给你带来启发和开发模板，关于更多字体栈源码，你可以访问CSS Font Stacks。1234567891011121314151617181920212223/* Times New Roman-based serif */ font-family: Cambria, "Hoefler Text", Utopia, "Liberation Serif", "Nimbus Roman No9 L Regular", Times, "Times New Roman", serif; /* A modern Georgia-based serif */ font-family: Constantia, "Lucida Bright", Lucidabright, "Lucida Serif", Lucida, "DejaVu Serif," "Bitstream Vera Serif", "Liberation Serif", Georgia, serif; /*A more traditional Garamond-based serif */ font-family: "Palatino Linotype", Palatino, Palladio, "URW Palladio L", "Book Antiqua", Baskerville, "Bookman Old Style", "Bitstream Charter", "Nimbus Roman No9 L", Garamond, "Apple Garamond", "ITC Garamond Narrow", "New Century Schoolbook", "Century Schoolbook", "Century Schoolbook L", Georgia, serif; /*The Helvetica/Arial-based sans serif */ font-family: Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif; /*The Verdana-based sans serif */ font-family: Corbel, "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "DejaVu Sans", "Bitstream Vera Sans", "Liberation Sans", Verdana, "Verdana Ref", sans-serif; /*The Trebuchet-based sans serif */ font-family: "Segoe UI", Candara, "Bitstream Vera Sans", "DejaVu Sans", "Bitstream Vera Sans", "Trebuchet MS", Verdana, "Verdana Ref", sans-serif; /*The heavier “Impact” sans serif */ font-family: Impact, Haettenschweiler, "Franklin Gothic Bold", Charcoal, "Helvetica Inserat", "Bitstream Vera Sans Bold", "Arial Black", sans-serif; /*The monospace */ font-family: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier, monospace; 源码地址： http://www.sitepoint.com/eight-definitive-font-stacks/ ## 9. 自定义文本选择 一些新的Web浏览器允许你在网页上自定义一些突出显示的颜色，下面代码的默认颜色是浅蓝色，当然，你可以依据个人爱好进行各种颜色设置。下面代码引用了典型的Webkit和Mozilla供应商前缀::selection 。123::selection &#123; background: #e2eae2; &#125;::-moz-selection &#123; background: #e2eae2; &#125;::-webkit-selection &#123; background: #e2eae2; &#125; ## 10.隐藏Logo上的H1文本1234567h1 &#123; text-indent: -9999px; margin: 0 auto; width: 320px; height: 85px; background: transparent url("images/logo.png") no-repeat scroll; &#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[使用hexo做好博客后上传到github]]></title>
    <url>%2F2017%2F06%2F02%2Fhexo%E4%B8%8A%E4%BC%A0%E5%88%B0github%2F</url>
    <content type="text"><![CDATA[以下均为本人总结操作系统：ubuntu16.04，hexo版本 “hexo”: {“version”: “3.3.7”},操作时间：2017.6。本文全由Alin J在百度搜索了很多教程中总结出来的，如有雷同觉得是抄袭的可联系我，邮箱：dgangmagag@163.com。node.js安装好了，git，hexo，npm也安装好了，下一步就是把源码上传到github上，并实现输入域名即可浏览自己的博客。 第一步：创建github账号和创建仓库1，百度github，进入官网注册简单的操作 1.2，创建仓库点击Repositories，点击new，跳转到Create a new repository页面。在Repository name输入你的仓库名，格式是XXX.github.io（不按这个格式建立仓库后续步骤可能会出错）,由于第一次操作，我建议XXX输入你的用户名。 第二步：生成ssh key,为github配置ssh key2.1，生成key1，生成key之前,先在做本地仓库的文件夹内(如本人安装hexo创建了一个叫blog的文件夹，我输入cd blog然后在这个文件夹内执行的git init)，执行命令1git init 2，完成后输入1ls -a 可以看到多了一个.git的文件（.git里面的任何东西不要动）2,然后可以开始配置git用户名和邮箱12git config user.name "用户名"git config user.email "邮箱" 顾名思义用户名就是你的github用户名，邮箱就是你的github邮箱 1ssh-keygen -t rsa -C "youname@example.com" youname@example.com这里写自己的gihub邮箱名，生成后输入12cd ~/.ssh/ls 可以看到1id_rsa id_rsa.pub known_hosts 三个文件，我们输入1cat id_rsa.pub 查看，把里面的东西全部复制，先粘贴到文档上 2.2，为github配置SSH key登录到你的github，点击右上头像那里，在下拉菜单找到setting，在左边侧边栏找到SSH and GPG keys,点击绿色按钮new SSH key，title随便输入一个名称，key粘贴刚刚复制出来的ssh key。OK下一步。 第三步，配置_congig.yml这个文件在hexo安装的根目录下(我的是blog,如果你是看了我上篇文章的话，那就跟我的一样)，拉到最下面，修改成（其中XXX就是你的用户名）deploy: type: git repo: github: https://github.com/XXX/XXX.github.io.git branch: master 第四步，建立本地仓库1，添加文件1git add . 你可以指定某一文件，如你有一个名叫test的文件，输入git add test就提交test这个文件。另外，你可以执行以下命令查看刚刚提交了什么1git status 4，然后输入1git commit -m "message" message是提交说明，随便输入，例如：this is a test. 5,建立链接1git remote add origin git@github.com:XXX/XXX.github.io.git 6,确认提交1git push -u origin master 提交速度看带宽12345对象计数中: 310, 完成.Delta compression using up to 4 threads.压缩对象中: 100% (297/297), 完成.写入对象中: 100% (310/310), 4.41 MiB | 1024 bytes/s, 完成.Total 310 (delta 10), reused 0 (delta 0) 然后光标一直不动了，大概半个小时，就显示123To git@github.com:diao7ni/diao7ni.github.io.git * [new branch] master -&gt; master分支 master 设置为跟踪来自 origin 的远程分支 master。 提交完成 7,最后一步：1hexo g 12npm install hexo-deployer-git --savehexo d 在执行hexo d时可能会报错，在文章下面有解决方法在浏览器输入XXX.github.io即可浏览到刚刚上传的博客啦 关于配置域名关于域名配置我就不说啦，网上很多可以用的教程。你们可以查看这个网址：http://qbview.url.cn/getResourceInfo?appid=31&amp;url=http%3A%2F%2Fwww.cnblogs.com%2Fpenglei-it%2Fp%2Fhexo_domain_name.html%3Fnsukey%3D%252Bhz9cHBlFgcV2SrfgwSIsTo%252FxDss6U2neFhtGwcRsbBElQs4%252B903yHmv3d%252FVOnyi%252FhKcvpBT3Tr%252BrTzYZ32eeV5Fd2MxmDFVUDAc0AHDlITeLALs2B3Ed1ust4%252FRrwAK6s1ncs%252BVXt42nEFjWaQh79nL%252BNAJGHNcJCAvbIEY23CPoqoxBmdD9YiciX2DOlTV&amp;version=10000&amp;doview=1&amp;ua=Mozilla%2F5.0+(X11%3B+Ubuntu%3B+Linux+x86_64%3B+rv%3A53.0)+Gecko%2F20100101+Firefox%2F53.0&amp;keeplink=0&amp;reformat=0 过程中可能出现的报错问题1：输入hexo d之后可能会出现这种问题，不知道你们会不会，反正我就是1234567891011121314151617fatal: 'master' does not appear to be a git repositoryfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: fatal: 'master' does not appear to be a git repositoryfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. at ChildProcess.&lt;anonymous&gt; (/home/lin/blog/node_modules/hexo-util/lib/spawn.js:37:17) at emitTwo (events.js:106:13) at ChildProcess.emit (events.js:191:7) at maybeClose (internal/child_process.js:891:16) at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5) 因为被百度某些坑人博客欺骗，我在输入域名的时候没有输对格式，显示404错误，并且终端报出这条错误，以为是这条报错导致的404。为了解决这个问题我找了一个晚上也没有解决，在一个朋友无意中发了一个域名出来我才发现原来我一直在浏览器打错域名，正确域名格式时XXX.github.io，在打对域名后发现可以浏览自己的博客了，即使终端时报出这条错误。也就是说，这条报错可以无视，因为对我暂时没有影响。。。报错具体原因不详。 问题2，ssh key 没有配好1Warning: Permanently added the RSA host key for IP address '192.30.253.113' to the list of known hosts. Permission denied (publickey). fatal: Could not read from remote repository. Please make sure y 解决办法：重新配一个呗 问题3，git fatal: 远程 origin 已经存在。这种情况一般是在百度教程复制粘贴别人的命令的时候没有修改然后手快按了enter才会发生。解决方法：123git remote rm origingit remote add origin git@github.com:XXX/XXX.github.io.git 问题4，ERROR Deployer not found: git解决办法：1npm install hexo-deployer-git --save 有些百度出来的教程是教你输入npm install hexo-deployer-git -save（只想对这些抄都抄少一个行杠的人表示呵呵，执行之后报错，加多一个-后执行成功） 问题5，执行hexo d之后要输入Username for ‘https://github.com‘:12Username for 'https://github.com': Password for 'https://diao7ni@github.com': 解决办法：输入你的git用户名和登录密码就好了]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo的安装和使用]]></title>
    <url>%2F2017%2F06%2F01%2Fhexo-install%26use%2F</url>
    <content type="text"><![CDATA[以下均为本人总结操作系统：ubuntu16.04,操作时间2017.6。hexo是一款基于Node.js的静态博客框架，下面就详细讲解在ubuntu16.04下如何安装和使用hexo。 第一步：安装node.js和Git1，安装node.js1$ curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - 1$ sudo apt-get install -y nodejs 这是node.js比较推荐的安装方法，一步到位。如果通过apt-get install nodejs使用ubuntu官方库的node.js，安装后还要执行更新命令，因为ubuntu官方库的版本过旧，不太推荐。 1.2，安装Git可以先查看你的电脑是否安装了Git，终端输入git，如果显示 1The program 'git' is currently not installed. You can install it by typing: 则说明没有安装Git，可以直接执行以下命令来安装 1sudo apt-get install git 第二步：hexo的安装和使用2.1，hexo安装1$ sudo npm install hexo-cli -g 2.2，快速创建一个博客1$ hexo init blog 命令行中的blog为文件夹名（可自定义），执行该命令后会在/home/用户/下创建一个叫blog的文件夹。 2.3，打开blog文件夹1$ cd blog 2.4，安装npm该命令是本地安装，如果想全局安装则执行$ sudo npm install -g 1$ sudo npm install 2.5，生成静态页面1$ hexo g hexo generate也可以 2.6，启动hexo服务1$ hexo server 启动成功后直接在浏览器输入localhost:4000可看到hexo默认博客。 以上就是hexo的安装和初步使用了，关于想更换hexo主题，创建新文章，添加评论功能等，在日后的博文中会有教程。]]></content>
  </entry>
</search>